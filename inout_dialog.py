# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'inout_dialog.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import sys
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtGui import QFont, QBrush, QColor
from PyQt5.QtWidgets import QApplication, QWidget, QMessageBox
from PyQt5.QtCore import Qt, QThread, QObject, pyqtSignal
from PyQt5.QtWidgets import *
from gestor import ware_gestor
import time
import copy


class MyThread_(QThread):
    # Create a counter thread
    change_value = pyqtSignal()
    #finished = pyqtSignal(str)
    myValue = True
    def run(self):
        while self.myValue:
            self.change_value.emit()
            time.sleep(0.5)


class Ui_inoutDialog(QtWidgets.QDialog):
    def __init__(self, parent):
        super(Ui_inoutDialog, self).__init__(parent)
        self.main_table = []
        self.button_condition = "cancelar"
        self.criterio = "None"
        self.ware_in = ware_gestor()
        self.setupUi()
        self.thread_ = MyThread_()
        self.thread_.change_value.connect(self.setProgressVal)
        self.current_user = None

    def show_window(self, user = None):
        self.current_user = user
        self.init_condition()
        self.thread_.myValue = True
        self.button_condition = "cancelar"
        self.criterio = "None"
        self.startProgressBar()
        self.main_table.clear()
        self.update_table()
        self.show()
        
    def startProgressBar(self):
        self.thread_.start()

    def setProgressVal(self):
        j = 0
        cant_ = 0
        for i in self.main_table:
            txt = self.in_tableWidget.item(j,3).text()
            try:
                i["cantidad"] = int(txt)
                cant_ += i["cantidad"]
                j += 1
            except:
                cant_ += i["cantidad"]
                j += 1
        self.lblTitle_cant.setText("Cantidad: " + str(cant_))

    def init_condition(self, user = None):
        # -----------  set item conditions  -----------
        self.cmbCriterio.setEnabled(True)
        if int(self.current_user.level) <= 2:
            item_all = ['ingreso']
        elif int(self.current_user.level) == 3:
            item_all = ['ingreso','egreso']
        self.cmbCriterio.clear()
        self.cmbCriterio.addItems(item_all)
        self.cmbCriterio.setCurrentIndex(-1)
        

    def add_item(self, object_):
        flag = False
        if len(self.main_table) == 0:
            _tmpObject = copy.copy(object_)
            data = {"cod": _tmpObject.book.cod, "isbn": _tmpObject.book.isbn, "name": _tmpObject.book.name, "cantidad": 1}
            self.main_table.append(data)
        else:
            _tmpObject = copy.copy(object_)
            data = {"cod": _tmpObject.book.cod, "isbn": _tmpObject.book.isbn, "name": _tmpObject.book.name, "cantidad": _tmpObject.almacen_quantity[0]}
            for item in self.main_table:
                if item["cod"] == _tmpObject.book.cod:
                    flag = True
                    item["cantidad"] += 1 
            if flag == False:
                data = {"cod": _tmpObject.book.cod, "isbn": _tmpObject.book.isbn, "name": _tmpObject.book.name, "cantidad": 1}
                self.main_table.append(data)
        self.update_table()

    def delete_item(self, object):
        print("Hola Mundo")

    def update_table(self):
        flag = QtCore.Qt.ItemIsSelectable|QtCore.Qt.ItemIsEnabled
        flag1 = QtCore.Qt.ItemIsSelectable|QtCore.Qt.ItemIsEnabled|QtCore.Qt.ItemIsEditable
        
        # -----------  esta parte para llenar la tabla  -----------
        row = 0
        self.in_tableWidget.setRowCount(len(self.main_table))

        for ware_li in self.main_table:
            item = QtWidgets.QTableWidgetItem(ware_li["cod"])
            item.setFlags(flag)
            self.in_tableWidget.setItem(row, 0, item)
            item = QtWidgets.QTableWidgetItem(ware_li["isbn"])
            item.setFlags(flag)
            self.in_tableWidget.setItem(row, 1, item)
            item = QtWidgets.QTableWidgetItem(ware_li["name"])
            item.setFlags(flag)
            self.in_tableWidget.setItem(row, 2, item)
            item = QtWidgets.QTableWidgetItem(str(ware_li["cantidad"]))
            item.setFlags(flag1)
            self.in_tableWidget.setItem(row, 3, item)
            row += 1

    def cancelar(self):
        self.button_condition = "cancelar"
        self.close()


    def aceptar(self):
        if str(self.cmbCriterio.currentText()) == "":
            ret = QMessageBox.information(self, 'Aviso', "Ingresar criterio de operacion")
        elif str(self.cmbCriterio.currentText()) == "ingreso":
            self.criterio = " + "
            self.button_condition = "aceptar"
            self.close()
        elif str(self.cmbCriterio.currentText()) == "egreso":
            self.criterio = " - "
            self.button_condition = "aceptar"
            self.close()
        

    def closeEvent(self, event):
        if self.button_condition == "aceptar":
            reply = QMessageBox.question(self, 'Window Close', 'Esta seguro de ingresar la operacion?',
                QMessageBox.Yes | QMessageBox.No, QMessageBox.No)
            if reply == QMessageBox.Yes:
                if self.ware_in.update_quantity(self.main_table, self.criterio):
                    event.accept()
                else:
                    ret = QMessageBox.information(self, 'Aviso', "No se pudo connectar con la base de datos")
                    self.button_condition = "cancelar"
                    self.criterio = "None"
                    event.ignore()

            else:
                self.criterio = "None"
                event.ignore()        

        elif self.button_condition == "cancelar":
            reply = QMessageBox.question(self, 'Window Close', 'al cerrar la ventana, se borrara los datos de la tabla',
                QMessageBox.Yes | QMessageBox.No, QMessageBox.No)
            if reply == QMessageBox.Yes:
                self.in_tableWidget.clearContents()
                self.in_tableWidget.setRowCount(0)
                self.thread_.myValue = False
                event.accept()
            else:
                event.ignore()

    def KeyPressed(self,event):
        if self.in_tableWidget.selectedIndexes() != []:
            if event.key() == QtCore.Qt.Key_Delete:
                temp = self.in_tableWidget.currentRow()    
                self.main_table.pop(temp)
                self.update_table()
        return QtWidgets.QTableWidget.keyPressEvent(self.in_tableWidget, event)

    def setupUi(self):
        self.setObjectName("inoutDialog")
        self.resize(640, 360)
        self.setFixedSize(640,360)
        self.frame_2 = QtWidgets.QFrame(self)
        self.frame_2.setGeometry(QtCore.QRect(0, 0, 640, 65))
        self.frame_2.setStyleSheet("background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0, stop:0.298507 rgba(22, 136, 126, 255), stop:1 rgba(56, 110, 142, 255));")
        self.frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setObjectName("frame_2")
        self.gbCriterio = QtWidgets.QGroupBox(self.frame_2)
        self.gbCriterio.setGeometry(QtCore.QRect(20, 0, 185, 60))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(240, 240, 240))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        gradient = QtGui.QLinearGradient(0.0, 1.0, 0.0, 0.0)
        gradient.setSpread(QtGui.QGradient.PadSpread)
        gradient.setCoordinateMode(QtGui.QGradient.ObjectBoundingMode)
        gradient.setColorAt(0.298507, QtGui.QColor(22, 136, 126))
        gradient.setColorAt(1.0, QtGui.QColor(56, 110, 142))
        brush = QtGui.QBrush(gradient)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        gradient = QtGui.QLinearGradient(0.0, 1.0, 0.0, 0.0)
        gradient.setSpread(QtGui.QGradient.PadSpread)
        gradient.setCoordinateMode(QtGui.QGradient.ObjectBoundingMode)
        gradient.setColorAt(0.298507, QtGui.QColor(22, 136, 126))
        gradient.setColorAt(1.0, QtGui.QColor(56, 110, 142))
        brush = QtGui.QBrush(gradient)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        gradient = QtGui.QLinearGradient(0.0, 1.0, 0.0, 0.0)
        gradient.setSpread(QtGui.QGradient.PadSpread)
        gradient.setCoordinateMode(QtGui.QGradient.ObjectBoundingMode)
        gradient.setColorAt(0.298507, QtGui.QColor(22, 136, 126))
        gradient.setColorAt(1.0, QtGui.QColor(56, 110, 142))
        brush = QtGui.QBrush(gradient)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(240, 240, 240))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        gradient = QtGui.QLinearGradient(0.0, 1.0, 0.0, 0.0)
        gradient.setSpread(QtGui.QGradient.PadSpread)
        gradient.setCoordinateMode(QtGui.QGradient.ObjectBoundingMode)
        gradient.setColorAt(0.298507, QtGui.QColor(22, 136, 126))
        gradient.setColorAt(1.0, QtGui.QColor(56, 110, 142))
        brush = QtGui.QBrush(gradient)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        gradient = QtGui.QLinearGradient(0.0, 1.0, 0.0, 0.0)
        gradient.setSpread(QtGui.QGradient.PadSpread)
        gradient.setCoordinateMode(QtGui.QGradient.ObjectBoundingMode)
        gradient.setColorAt(0.298507, QtGui.QColor(22, 136, 126))
        gradient.setColorAt(1.0, QtGui.QColor(56, 110, 142))
        brush = QtGui.QBrush(gradient)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        gradient = QtGui.QLinearGradient(0.0, 1.0, 0.0, 0.0)
        gradient.setSpread(QtGui.QGradient.PadSpread)
        gradient.setCoordinateMode(QtGui.QGradient.ObjectBoundingMode)
        gradient.setColorAt(0.298507, QtGui.QColor(22, 136, 126))
        gradient.setColorAt(1.0, QtGui.QColor(56, 110, 142))
        brush = QtGui.QBrush(gradient)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        gradient = QtGui.QLinearGradient(0.0, 1.0, 0.0, 0.0)
        gradient.setSpread(QtGui.QGradient.PadSpread)
        gradient.setCoordinateMode(QtGui.QGradient.ObjectBoundingMode)
        gradient.setColorAt(0.298507, QtGui.QColor(22, 136, 126))
        gradient.setColorAt(1.0, QtGui.QColor(56, 110, 142))
        brush = QtGui.QBrush(gradient)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        gradient = QtGui.QLinearGradient(0.0, 1.0, 0.0, 0.0)
        gradient.setSpread(QtGui.QGradient.PadSpread)
        gradient.setCoordinateMode(QtGui.QGradient.ObjectBoundingMode)
        gradient.setColorAt(0.298507, QtGui.QColor(22, 136, 126))
        gradient.setColorAt(1.0, QtGui.QColor(56, 110, 142))
        brush = QtGui.QBrush(gradient)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        gradient = QtGui.QLinearGradient(0.0, 1.0, 0.0, 0.0)
        gradient.setSpread(QtGui.QGradient.PadSpread)
        gradient.setCoordinateMode(QtGui.QGradient.ObjectBoundingMode)
        gradient.setColorAt(0.298507, QtGui.QColor(22, 136, 126))
        gradient.setColorAt(1.0, QtGui.QColor(56, 110, 142))
        brush = QtGui.QBrush(gradient)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.gbCriterio.setPalette(palette)
        font = QtGui.QFont()
        font.setFamily("Open Sans Semibold")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.gbCriterio.setFont(font)
        self.gbCriterio.setObjectName("gbCriterio")
        self.cmbCriterio = QtWidgets.QComboBox(self.gbCriterio)
        self.cmbCriterio.setGeometry(QtCore.QRect(20, 23, 141, 30))
        self.cmbCriterio.setStyleSheet("background-color: rgb(170, 255, 0);")
        font = QFont()
        font.setFamily("Open Sans Semibold")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.cmbCriterio.setFont(font)
        self.cmbCriterio.setObjectName("cmbCriterio")

        # -----------  lblTitle  -----------
        self.lblTitle = QtWidgets.QLabel(self.frame_2)
        self.lblTitle.setGeometry(QtCore.QRect(235, 19, 361, 31))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(240, 240, 240))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(240, 240, 240))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.lblTitle.setPalette(palette)
        font = QtGui.QFont()
        font.setFamily("Open Sans Semibold")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.lblTitle.setFont(font)
        self.lblTitle.setStyleSheet("background-color: rgba(255, 255, 255, 0);")
        self.lblTitle.setWordWrap(False)
        self.lblTitle.setObjectName("lblTitle")

        # -----------  frame configuration  -----------
        self.frame = QtWidgets.QFrame(self)
        self.frame.setGeometry(QtCore.QRect(0, 300, 640, 60))
        self.frame.setStyleSheet("background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0, stop:0.298507 rgba(22, 136, 126, 255), stop:1 rgba(56, 110, 142, 255));")
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")

        # -----------  cantidad label  -----------
        self.lblTitle_cant = QtWidgets.QLabel(self.frame)
        self.lblTitle_cant.setGeometry(QtCore.QRect(430, 12, 361, 31))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(240, 240, 240))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(240, 240, 240))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.lblTitle_cant.setPalette(palette)
        font = QtGui.QFont()
        font.setFamily("Open Sans Semibold")
        font.setPointSize(15)
        font.setBold(True)
        font.setWeight(75)
        self.lblTitle_cant.setFont(font)
        #self.lblTitle_cant.setStyleSheet("background-color: rgba(255, 255, 0, 0);")
        self.lblTitle_cant.setWordWrap(False)
        self.lblTitle_cant.setObjectName("lblTitle_cant")

        # -----------  btn aceptar configutarion  -----------
        self.btnAceptar = QtWidgets.QPushButton(self.frame)
        #self.btnAceptar.setGeometry(QtCore.QRect(120, 10, 141, 41))
        self.btnAceptar.setGeometry(QtCore.QRect(50, 10, 141, 41))
        font = QtGui.QFont()
        font.setFamily("Open Sans Semibold")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.btnAceptar.setFont(font)
        self.btnAceptar.setStyleSheet("background-color: rgb(240, 240, 240);")
        self.btnAceptar.setObjectName("btnAceptar")
        self.btnAceptar.clicked.connect(self.aceptar)

        # -----------  btn cancelar configuration  -----------
        self.btnCancelar = QtWidgets.QPushButton(self.frame)
        self.btnCancelar.setGeometry(QtCore.QRect(250, 10, 141, 41))
        font = QtGui.QFont()
        font.setFamily("Open Sans Semibold")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.btnCancelar.setFont(font)
        self.btnCancelar.setStyleSheet("background-color: rgb(240, 240, 240);")
        self.btnCancelar.setObjectName("btnCancelar")
        self.btnCancelar.clicked.connect(self.cancelar)

        # -----------  in_tableWidget  -----------
        self.in_tableWidget = QtWidgets.QTableWidget(self)
        self.in_tableWidget.setGeometry(QtCore.QRect(0, 65, 640, 235))
        self.in_tableWidget.setObjectName("in_tableWidget")
        self.in_tableWidget.setColumnCount(4)
        self.in_tableWidget.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.in_tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.in_tableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.in_tableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.in_tableWidget.setHorizontalHeaderItem(3, item)

        self.in_tableWidget.setColumnWidth(0,80)
        self.in_tableWidget.setColumnWidth(1,120)
        self.in_tableWidget.setColumnWidth(2,335)
        self.in_tableWidget.setColumnWidth(3,75)
        self.in_tableWidget.horizontalHeader().setEnabled(False)
        self.in_tableWidget.setSelectionMode(1)
        self.in_tableWidget.setSelectionBehavior(1)
        self.in_tableWidget.setStyleSheet("selection-background-color: rgb(0, 120, 255);selection-color: rgb(255, 255, 255);")
        self.in_tableWidget.verticalHeader().hide()
        self.in_tableWidget.keyPressEvent = self.KeyPressed



        self.retranslateUi()
        QtCore.QMetaObject.connectSlotsByName(self)

    def retranslateUi(self):

        _translate = QtCore.QCoreApplication.translate
        self.setWindowTitle(_translate("Dialog", "Genesis - [Museo del libro]"))
        self.gbCriterio.setTitle(_translate("inoutDialog", "Criterio"))
        self.lblTitle.setText(_translate("inoutDialog", "------- HOJA DE ENTRADA/SALIDA -------"))
        self.lblTitle_cant.setText(_translate("inoutDialog", "Cantidad: 0"))
        self.btnAceptar.setText(_translate("inoutDialog", "Aceptar"))
        self.btnCancelar.setText(_translate("inoutDialog", "Cancelar"))
        
        font = QtGui.QFont()
        font.setFamily("Open Sans Semibold")
        font.setPointSize(11)
        font.setWeight(85)
        font.setBold(True)

        item = self.in_tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("inoutDialog", "cod"))
        item.setFont(font)
        item.setForeground(QBrush(QColor(0,0,0)))
        item = self.in_tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("inoutDialog", "isbn"))
        item.setFont(font)
        item.setForeground(QBrush(QColor(0,0,0)))
        item = self.in_tableWidget.horizontalHeaderItem(2)
        item.setText(_translate("inoutDialog", "nombre"))
        item.setFont(font)
        item.setForeground(QBrush(QColor(0,0,0)))
        item = self.in_tableWidget.horizontalHeaderItem(3)
        item.setText(_translate("inoutDialog", "cant."))
        item.setFont(font)
        item.setForeground(QBrush(QColor(0,0,0)))


if __name__ == '__main__':
    app = QApplication(sys.argv)
    Dialog = QDialog()
    ui = Ui_inoutDialog(Dialog)
    ui.show_window()
    sys.exit(app.exec_())
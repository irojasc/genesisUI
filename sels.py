# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'sels.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtGui import QFont, QBrush, QColor
from PyQt5.QtWidgets import *
from gestor import dayly_sales
from PyQt5.QtCore import Qt, QThread, QObject, pyqtSignal
import time


class MyThread_(QThread):
    # Create a counter thread
    change_value = pyqtSignal()
    #finished = pyqtSignal(str)
    myValue = True
    def run(self):
        while self.myValue:
            self.change_value.emit()
            time.sleep(1)


class Ui_selsDialog(QtWidgets.QDialog):
    def __init__(self, parent = None):
        super(Ui_selsDialog, self).__init__(parent)
        self.setupUi()
        self.sales_object = dayly_sales()
        self.real_table1 = []
        self.real_table2 = []
        self.real_table3 = []
        self.cajaChica_1 = 0.0
        self.cajaChica_2 = 0.0
        self.cajaChica_3 = 0.0
        self.currentTab = 1

    def init_condition(self, wareAbrev = 'STC'):
        ### List_ es donde se almacena los estados de los dias
        ### List_ ['tab','condition']
        self.wareAbrev = wareAbrev
        self.List_ = self.sales_object.get_lastThreedays()
        if len(self.List_) > 0:
            self.tabWidget.setTabText(0,self.List_[0]['tab'])
            self.tabWidget.setTabText(1,self.List_[1]['tab'])
            self.tabWidget.setTabText(2,self.List_[2]['tab'])

    def lastTwo(self):
        flag = QtCore.Qt.ItemIsSelectable|QtCore.Qt.ItemIsEnabled
        self.sales_object.getLastTwo()
        self.real_table2 = self.sales_object.List2.copy()
        row = 0
        self.tableWidget_2.setRowCount(len(self.real_table2)-1)

        for ware_li in self.real_table2:
            id_ = ware_li['id']
            if id_ != 0:
                item = QtWidgets.QTableWidgetItem(ware_li['hora'])
                item.setFlags(flag)
                self.tableWidget_2.setItem(row, 0, item)
                if ware_li['metodo'] == False:
                    self.tableWidget_2.item(row,0).setBackground(QtGui.QColor(255,255,0))
                item = QtWidgets.QTableWidgetItem(ware_li['user'])
                item.setFlags(flag)
                self.tableWidget_2.setItem(row, 1, item)
                item = QtWidgets.QTableWidgetItem(ware_li['codBook'])
                item.setFlags(flag)
                self.tableWidget_2.setItem(row, 2, item)
                item = QtWidgets.QTableWidgetItem(ware_li['titulo'])
                item.setFlags(flag)
                self.tableWidget_2.setItem(row, 3, item)
                item = QtWidgets.QTableWidgetItem(ware_li['cant'])
                item.setFlags(flag)
                self.tableWidget_2.setItem(row, 4, item)
                item = QtWidgets.QTableWidgetItem(ware_li['pu'])
                item.setFlags(flag)
                self.tableWidget_2.setItem(row, 5, item)
                item = QtWidgets.QTableWidgetItem(ware_li['pv'])
                item.setFlags(flag)
                self.tableWidget_2.setItem(row, 6, item)
                row += 1
            else:
                self.cajaChica_2 = str(ware_li['pv'])


        self.real_table3 = self.sales_object.List3.copy()
        row = 0
        self.tableWidget_3.setRowCount(len(self.real_table3)-1)

        for ware_li in self.real_table3:
            id_ = ware_li['id']
            if id_ != 0:
                item = QtWidgets.QTableWidgetItem(ware_li['hora'])
                item.setFlags(flag)
                self.tableWidget_3.setItem(row, 0, item)
                if ware_li['metodo'] == False:
                    self.tableWidget_3.item(row,0).setBackground(QtGui.QColor(255,255,0))
                item = QtWidgets.QTableWidgetItem(ware_li['user'])
                item.setFlags(flag)
                self.tableWidget_3.setItem(row, 1, item)
                item = QtWidgets.QTableWidgetItem(ware_li['codBook'])
                item.setFlags(flag)
                self.tableWidget_3.setItem(row, 2, item)
                item = QtWidgets.QTableWidgetItem(ware_li['titulo'])
                item.setFlags(flag)
                self.tableWidget_3.setItem(row, 3, item)
                item = QtWidgets.QTableWidgetItem(ware_li['cant'])
                item.setFlags(flag)
                self.tableWidget_3.setItem(row, 4, item)
                item = QtWidgets.QTableWidgetItem(ware_li['pu'])
                item.setFlags(flag)
                self.tableWidget_3.setItem(row, 5, item)
                item = QtWidgets.QTableWidgetItem(ware_li['pv'])
                item.setFlags(flag)
                self.tableWidget_3.setItem(row, 6, item)
                row += 1
            else:
                self.cajaChica_3 = str(ware_li['pv'])

    def lastTables(self):
        flag = QtCore.Qt.ItemIsSelectable|QtCore.Qt.ItemIsEnabled
        self.sales_object.getLastThree()
        self.real_table1 = self.sales_object.List1.copy()
        row = 0
        self.tableWidget.setRowCount(len(self.real_table1) - 1)

        for ware_li in self.real_table1:
            id_ = ware_li['id']
            if id_ != 0:
                item = QtWidgets.QTableWidgetItem(ware_li['hora'])
                item.setFlags(flag)
                self.tableWidget.setItem(row, 0, item)
                if ware_li['metodo'] == False:
                    self.tableWidget.item(row,0).setBackground(QtGui.QColor(255,255,0))
                item = QtWidgets.QTableWidgetItem(ware_li['user'])
                item.setFlags(flag)
                self.tableWidget.setItem(row, 1, item)
                item = QtWidgets.QTableWidgetItem(ware_li['codBook'])
                item.setFlags(flag)
                self.tableWidget.setItem(row, 2, item)
                item = QtWidgets.QTableWidgetItem(ware_li['titulo'])
                item.setFlags(flag)
                self.tableWidget.setItem(row, 3, item)
                item = QtWidgets.QTableWidgetItem(ware_li['cant'])
                item.setFlags(flag)
                self.tableWidget.setItem(row, 4, item)
                item = QtWidgets.QTableWidgetItem(ware_li['pu'])
                item.setFlags(flag)
                self.tableWidget.setItem(row, 5, item)
                item = QtWidgets.QTableWidgetItem(ware_li['pv'])
                item.setFlags(flag)
                self.tableWidget.setItem(row, 6, item)
                row += 1
            else:
                self.lineEdit.setText(str(ware_li['pv']))
                if self.lineEdit.text() == "":
                    self.cajaChica_1 = 0.0
                else:
                    self.cajaChica_1 = str(ware_li['pv'])


        self.real_table2 = self.sales_object.List2.copy()
        row = 0
        self.tableWidget_2.setRowCount(len(self.real_table2) - 1)

        for ware_li in self.real_table2:
            id_ = ware_li['id']
            if id_ != 0:
                item = QtWidgets.QTableWidgetItem(ware_li['hora'])
                item.setFlags(flag)
                self.tableWidget_2.setItem(row, 0, item)
                if ware_li['metodo'] == False:
                    self.tableWidget_2.item(row,0).setBackground(QtGui.QColor(255,255,0))
                item = QtWidgets.QTableWidgetItem(ware_li['user'])
                item.setFlags(flag)
                self.tableWidget_2.setItem(row, 1, item)
                item = QtWidgets.QTableWidgetItem(ware_li['codBook'])
                item.setFlags(flag)
                self.tableWidget_2.setItem(row, 2, item)
                item = QtWidgets.QTableWidgetItem(ware_li['titulo'])
                item.setFlags(flag)
                self.tableWidget_2.setItem(row, 3, item)
                item = QtWidgets.QTableWidgetItem(ware_li['cant'])
                item.setFlags(flag)
                self.tableWidget_2.setItem(row, 4, item)
                item = QtWidgets.QTableWidgetItem(ware_li['pu'])
                item.setFlags(flag)
                self.tableWidget_2.setItem(row, 5, item)
                item = QtWidgets.QTableWidgetItem(ware_li['pv'])
                item.setFlags(flag)
                self.tableWidget_2.setItem(row, 6, item)
                row += 1
            else:
                self.cajaChica_2 = str(ware_li['pv'])


        self.real_table3 = self.sales_object.List3.copy()
        row = 0
        self.tableWidget_3.setRowCount(len(self.real_table3) - 1)

        for ware_li in self.real_table3:
            id_ = ware_li['id']
            if id_ != 0:
                item = QtWidgets.QTableWidgetItem(ware_li['hora'])
                item.setFlags(flag)
                self.tableWidget_3.setItem(row, 0, item)
                if ware_li['metodo'] == False:
                    self.tableWidget_3.item(row,0).setBackground(QtGui.QColor(255,255,0))
                item = QtWidgets.QTableWidgetItem(ware_li['user'])
                item.setFlags(flag)
                self.tableWidget_3.setItem(row, 1, item)
                item = QtWidgets.QTableWidgetItem(ware_li['codBook'])
                item.setFlags(flag)
                self.tableWidget_3.setItem(row, 2, item)
                item = QtWidgets.QTableWidgetItem(ware_li['titulo'])
                item.setFlags(flag)
                self.tableWidget_3.setItem(row, 3, item)
                item = QtWidgets.QTableWidgetItem(ware_li['cant'])
                item.setFlags(flag)
                self.tableWidget_3.setItem(row, 4, item)
                item = QtWidgets.QTableWidgetItem(ware_li['pu'])
                item.setFlags(flag)
                self.tableWidget_3.setItem(row, 5, item)
                item = QtWidgets.QTableWidgetItem(ware_li['pv'])
                item.setFlags(flag)
                self.tableWidget_3.setItem(row, 6, item)
                row += 1
            else:
                self.cajaChica_3 = str(ware_li['pv'])

        self.tabWidget.setCurrentIndex(0)
        self.printAmount(1)
        self.lineEdit.setEnabled(False)

    def currentTable(self):
        flag = QtCore.Qt.ItemIsSelectable|QtCore.Qt.ItemIsEnabled
        #self.currentID_day = currentID
        self.sales_object.currentSales_(self.currentID_day)
        self.real_table1 = self.sales_object.List1.copy()
        row = 0
        self.tableWidget.setRowCount(len(self.real_table1) - 1)

        for ware_li in self.real_table1:
            id_ = ware_li['id']
            if id_ != 0:
                
                item = QtWidgets.QTableWidgetItem(ware_li['hora'])
                item.setFlags(flag)
                self.tableWidget.setItem(row, 0, item)
                if ware_li['metodo'] == False:
                    self.tableWidget.item(row,0).setBackground(QtGui.QColor(255,255,0))
                item = QtWidgets.QTableWidgetItem(ware_li['user'])
                item.setFlags(flag)
                self.tableWidget.setItem(row, 1, item)
                item = QtWidgets.QTableWidgetItem(ware_li['codBook'])
                item.setFlags(flag)
                self.tableWidget.setItem(row, 2, item)
                item = QtWidgets.QTableWidgetItem(ware_li['titulo'])
                item.setFlags(flag)
                self.tableWidget.setItem(row, 3, item)
                item = QtWidgets.QTableWidgetItem(ware_li['cant'])
                item.setFlags(flag)
                self.tableWidget.setItem(row, 4, item)
                item = QtWidgets.QTableWidgetItem(ware_li['pu'])
                item.setFlags(flag)
                self.tableWidget.setItem(row, 5, item)
                item = QtWidgets.QTableWidgetItem(ware_li['pv'])
                item.setFlags(flag)
                self.tableWidget.setItem(row, 6, item)

                row += 1
            else:
                self.lineEdit.setText(str(ware_li['pv']))
                if self.lineEdit.text() == "":
                    self.cajaChica_1 = 0.0
                else:
                    self.cajaChica_1 = str(ware_li['pv'])
        self.printAmount(1)
        self.currentTab = 1
        self.tabWidget.setCurrentIndex(0)


    def printAmount(self, listNumber):
        efectivo = 0.0
        visa = 0.0
        if listNumber == 1:
            for k in self.real_table1:
                if k['id'] != 0:
                    if k['metodo'] == True:
                        efectivo += float(k['pv'])
                    else:
                        visa += float(k['pv'])
            total = efectivo + visa - float(self.lineEdit.text())
            self.lblVisadinero.setText(str(visa))
            self.lblEfectivodinero.setText(str(efectivo))
            self.lblTotaldinero.setText(str(total)) 
        elif listNumber == 2:
            for k in self.real_table2:
                if k['id'] != 0:
                    if k['metodo'] == True:
                        efectivo += float(k['pv'])
                    else:
                        visa += float(k['pv'])
            total = efectivo + visa - float(self.lineEdit.text())
            self.lblVisadinero.setText(str(visa))
            self.lblEfectivodinero.setText(str(efectivo))
            self.lblTotaldinero.setText(str(total)) 
        elif listNumber == 3:
            for k in self.real_table3:
                if k['id'] != 0:
                    if k['metodo'] == True:
                        efectivo += float(k['pv'])
                    else:
                        visa += float(k['pv'])
            total = efectivo + visa - float(self.lineEdit.text())
            self.lblVisadinero.setText(str(visa))
            self.lblEfectivodinero.setText(str(efectivo))
            self.lblTotaldinero.setText(str(total))

    def onChange(self,i): #changed!
        if i == 0:
            if self.List_[0]['condition'] == 'INACTIVO':
                self.lblPrinter.setVisible(False)
                if self.currentID_day != 0:   
                    self.lineEdit.setEnabled(False)
            else:
                self.lblPrinter.setVisible(True)
                if self.currentID_day != 0:    
                    self.lineEdit.setEnabled(True)
            self.lineEdit.setText(str(self.cajaChica_1))
            self.printAmount(1)
            self.currentTab = 1

        elif i == 1:
            if self.List_[1]['condition'] == 'INACTIVO':
                self.lblPrinter.setVisible(False)
            else:
                self.lblPrinter.setVisible(True)
                
            self.lineEdit.setEnabled(False)
            self.lineEdit.setText(str(self.cajaChica_2))
            self.printAmount(2)
            self.currentTab = 2

        elif i == 2:
            if self.List_[2]['condition'] == 'INACTIVO':
                self.lblPrinter.setVisible(False)
            else:
                self.lblPrinter.setVisible(True)

            self.lineEdit.setEnabled(False)
            self.lineEdit.setText(str(self.cajaChica_3))
            self.printAmount(3)
            self.currentTab = 3


    def currentDay_printer(self, currentID = 0, userID = 0):
        self.userID = userID
        self.currentID_day = currentID
        if self.List_[0]['condition'] == 'INACTIVO':
            self.lblPrinter.setVisible(False)
            if self.currentID_day != 0:
                self.lineEdit.setEnabled(False)
        else:
            self.lblPrinter.setVisible(True)
            if self.currentID_day != 0:
                self.lineEdit.setEnabled(True)


    # -----------  close event configuration  -----------
    def closeEvent(self, event):
        if self.lineEdit.text() == "":
            print("Aqui no paso nada")
        else:
            try:
                if self.currentTab == 1:
                    CJ_chica = float(self.lineEdit.text())
                    if float(self.cajaChica_1) != CJ_chica:
                        self.sales_object.actualizarCajaChica(CJ_chica, self.currentID_day)
            except:
                ret = QMessageBox.information(self, 'Aviso', "Gasto diario invalido")

    # -----------  printer function  -----------
    def print(self, event):
        if self.currentTab == 1 and self.List_[0]['condition'] == 'ACTIVO':
            ret = QMessageBox.question(self, 'Genesis - [Museo del Libro]', "Desea cerrar las ventas de la pestaña activa?", QMessageBox.Yes | QMessageBox.No , QMessageBox.No)
            if ret == QMessageBox.Yes:
                if self.sales_object.change_state(self.List_[0]['id'], self.userID): #sql
                    self.init_condition() #sql
                    self.lblPrinter.setVisible(False)
                    #imprimir function

        elif self.currentTab == 2 and self.List_[1]['condition'] == 'ACTIVO':
            ret = QMessageBox.question(self, 'Genesis - [Museo del Libro]', "Desea cerrar las ventas de la pestaña activa?", QMessageBox.Yes | QMessageBox.No , QMessageBox.No)
            if ret == QMessageBox.Yes:
                if self.sales_object.change_state(self.List_[1]['id'], self.userID): #sql
                    self.init_condition() #sql
                    self.lblPrinter.setVisible(False)
                    #imprimir function

        elif self.currentTab == 3 and self.List_[2]['condition'] == 'ACTIVO':
            ret = QMessageBox.question(self, 'Genesis - [Museo del Libro]', "Desea cerrar las ventas de la pestaña activa?", QMessageBox.Yes | QMessageBox.No , QMessageBox.No)
            if ret == QMessageBox.Yes:
                if self.sales_object.change_state(self.List_[2]['id'], self.userID): #sql #falta agregar el responsable
                    self.init_condition() #sql
                    self.lblPrinter.setVisible(False)
                    #imprimir function

    def setupUi(self):
        self.setObjectName("selsDialog")
        self.resize(720, 380)
        self.setFixedSize(720,400)
        self.frame = QtWidgets.QFrame(self)
        self.frame.setGeometry(QtCore.QRect(0, 0, 720, 60))
        self.frame.setStyleSheet("background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0, stop:0.298507 rgba(83, 97, 142, 255), stop:1 rgba(97, 69, 128, 255));")
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")

        # -----------  blanco color  -----------
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(166, 255, 240, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(166, 255, 240, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(166, 255, 240, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(166, 255, 240, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(166, 255, 240, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(166, 255, 240, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(166, 255, 240, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(166, 255, 240, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(166, 255, 240, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)

        # -----------  verde color  -----------
        palette1 = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(164, 255, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette1.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette1.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette1.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette1.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(164, 255, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette1.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette1.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette1.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette1.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette1.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette1.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette1.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette1.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)

        # -----------  titleLabel Configuration  -----------
        self.titleLabel = QtWidgets.QLabel(self.frame)
        self.titleLabel.setGeometry(QtCore.QRect(240, 15, 221, 31))
        self.titleLabel.setPalette(palette)
        font = QtGui.QFont()
        font.setFamily("Open Sans Semibold")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.titleLabel.setFont(font)
        self.titleLabel.setStyleSheet("background-color: rgba(166, 255, 240, 0);")
        self.titleLabel.setObjectName("titleLabel")

        # -----------  tabWidget Configuration  -----------
        tab_shape = QtWidgets.QTabWidget.Triangular
        self.tabWidget = QtWidgets.QTabWidget(self)
        self.tabWidget.setGeometry(QtCore.QRect(0, 60, 720, 250))
        self.tabWidget.setObjectName("tabWidget")
        font = QtGui.QFont()
        font.setFamily("Open Sans Semibold")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.tabWidget.setFont(font)
        self.tabWidget.setTabShape(tab_shape)
        self.tabWidget.blockSignals(True)
        self.tabWidget.currentChanged.connect(self.onChange)
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")

        # -----------  QtableWidget_0  -----------
        self.tableWidget = QtWidgets.QTableWidget(self.tab)
        self.tableWidget.setGeometry(QtCore.QRect(0, 0, 720, 220))
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(7)
        self.tableWidget.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(6, item)
        self.tableWidget.setColumnWidth(0,70)
        self.tableWidget.setColumnWidth(1,60)
        self.tableWidget.setColumnWidth(2,80)
        self.tableWidget.setColumnWidth(3,250)
        self.tableWidget.setColumnWidth(4,50)
        self.tableWidget.setColumnWidth(5,95)
        self.tableWidget.setColumnWidth(6,110)
        header = self.tableWidget.horizontalHeader()
        header.setSectionResizeMode(0, QtWidgets.QHeaderView.Fixed)
        header.setSectionResizeMode(1, QtWidgets.QHeaderView.Fixed)
        header.setSectionResizeMode(2, QtWidgets.QHeaderView.Fixed)
        header.setSectionResizeMode(3, QtWidgets.QHeaderView.Fixed)
        header.setSectionResizeMode(4, QtWidgets.QHeaderView.Fixed)
        header.setSectionResizeMode(5, QtWidgets.QHeaderView.Fixed)
        header.setSectionResizeMode(6, QtWidgets.QHeaderView.Fixed)
        header.setStretchLastSection(True)
        self.tableWidget.verticalHeader().hide()
        self.tableWidget.setSelectionBehavior(1)
        self.tableWidget.setSelectionMode(1)

        # -----------  qtablewidget_1  -----------
        self.tabWidget.addTab(self.tab, "")
        self.tab_3 = QtWidgets.QWidget()
        self.tab_3.setObjectName("tab_3")
        self.tableWidget_2 = QtWidgets.QTableWidget(self.tab_3)
        self.tableWidget_2.setGeometry(QtCore.QRect(0, 0, 720, 220))
        self.tableWidget_2.setObjectName("tableWidget_2")
        self.tableWidget_2.setColumnCount(7)
        self.tableWidget_2.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setHorizontalHeaderItem(6, item)
        self.tableWidget_2.setColumnWidth(0,70)
        self.tableWidget_2.setColumnWidth(1,60)
        self.tableWidget_2.setColumnWidth(2,80)
        self.tableWidget_2.setColumnWidth(3,250)
        self.tableWidget_2.setColumnWidth(4,50)
        self.tableWidget_2.setColumnWidth(5,95)
        self.tableWidget_2.setColumnWidth(6,110)
        header = self.tableWidget_2.horizontalHeader()
        header.setSectionResizeMode(0, QtWidgets.QHeaderView.Fixed)
        header.setSectionResizeMode(1, QtWidgets.QHeaderView.Fixed)
        header.setSectionResizeMode(2, QtWidgets.QHeaderView.Fixed)
        header.setSectionResizeMode(3, QtWidgets.QHeaderView.Fixed)
        header.setSectionResizeMode(4, QtWidgets.QHeaderView.Fixed)
        header.setSectionResizeMode(5, QtWidgets.QHeaderView.Fixed)
        header.setSectionResizeMode(6, QtWidgets.QHeaderView.Fixed)
        header.setStretchLastSection(True)
        self.tableWidget_2.verticalHeader().hide()
        self.tableWidget_2.setSelectionBehavior(1)
        self.tableWidget_2.setSelectionMode(1)

        # -----------  qtablewidget_2  -----------
        self.tabWidget.addTab(self.tab_3, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.tableWidget_3 = QtWidgets.QTableWidget(self.tab_2)
        self.tableWidget_3.setGeometry(QtCore.QRect(0, 0, 720, 220))
        self.tableWidget_3.setObjectName("tableWidget_3")
        self.tableWidget_3.setColumnCount(7)
        self.tableWidget_3.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setHorizontalHeaderItem(6, item)
        self.tableWidget_3.setColumnWidth(0,70)
        self.tableWidget_3.setColumnWidth(1,60)
        self.tableWidget_3.setColumnWidth(2,80)
        self.tableWidget_3.setColumnWidth(3,250)
        self.tableWidget_3.setColumnWidth(4,50)
        self.tableWidget_3.setColumnWidth(5,95)
        self.tableWidget_3.setColumnWidth(6,110)
        header = self.tableWidget_3.horizontalHeader()
        header.setSectionResizeMode(0, QtWidgets.QHeaderView.Fixed)
        header.setSectionResizeMode(1, QtWidgets.QHeaderView.Fixed)
        header.setSectionResizeMode(2, QtWidgets.QHeaderView.Fixed)
        header.setSectionResizeMode(3, QtWidgets.QHeaderView.Fixed)
        header.setSectionResizeMode(4, QtWidgets.QHeaderView.Fixed)
        header.setSectionResizeMode(5, QtWidgets.QHeaderView.Fixed)
        header.setSectionResizeMode(6, QtWidgets.QHeaderView.Fixed)
        header.setStretchLastSection(True)
        self.tableWidget_3.verticalHeader().hide()
        self.tableWidget_3.setSelectionBehavior(1)
        self.tableWidget_3.setSelectionMode(1)
        self.tableWidget_3.setStyleSheet("selection-background-color: rgb(0, 120, 255);selection-color: rgb(255, 255, 255);")
        self.tabWidget.addTab(self.tab_2, "")

        # -----------  frame_2 configuration  -----------
        
        self.frame_2 = QtWidgets.QFrame(self)
        self.frame_2.setGeometry(QtCore.QRect(0, 310, 720, 90))
        self.frame_2.setStyleSheet("background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0, stop:0.298507 rgba(83, 97, 142, 255), stop:1 rgba(97, 69, 128, 255));")
        self.frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setObjectName("frame_2")

        # -----------  lblVisa configuration  -----------
        self.lblVisa = QtWidgets.QLabel(self.frame_2)
        self.lblVisa.setGeometry(QtCore.QRect(440, 5, 51, 31))
        self.lblVisa.setPalette(palette)
        font = QtGui.QFont()
        font.setFamily("Open Sans Semibold")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.lblVisa.setFont(font)
        self.lblVisa.setStyleSheet("background-color: rgba(255, 255, 255, 0);")
        self.lblVisa.setObjectName("lblVisa")

        # -----------  lbl efectivo configuration  -----------
        self.lblEfectivo = QtWidgets.QLabel(self.frame_2)
        self.lblEfectivo.setGeometry(QtCore.QRect(403, 31, 101, 31))
        self.lblEfectivo.setPalette(palette)
        font = QtGui.QFont()
        font.setFamily("Open Sans Semibold")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.lblEfectivo.setFont(font)
        self.lblEfectivo.setStyleSheet("background-color: rgba(255, 255, 255, 0);")
        self.lblEfectivo.setObjectName("lblEfectivo")

        # -----------  lblVisadinero  -----------
        self.lblVisadinero = QtWidgets.QLabel(self.frame_2)
        self.lblVisadinero.setGeometry(QtCore.QRect(495, 6, 71, 31))
        self.lblVisadinero.setPalette(palette1)
        font = QtGui.QFont()
        font.setFamily("Open Sans Semibold")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.lblVisadinero.setFont(font)
        self.lblVisadinero.setStyleSheet("background-color: rgba(255, 255, 255, 0);")
        self.lblVisadinero.setObjectName("lblVisadinero")

        # -----------  lblCajaChica  -----------
        self.lblChica = QtWidgets.QLabel(self.frame_2)
        self.lblChica.setGeometry(QtCore.QRect(360, 55, 131, 31))
        self.lblChica.setPalette(palette)
        font = QtGui.QFont()
        font.setFamily("Open Sans Semibold")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.lblChica.setFont(font)
        self.lblChica.setStyleSheet("background-color: rgba(255, 255, 255, 0);")
        self.lblChica.setObjectName("lblChica")

        # -----------  lblEfectivo Dinero  -----------
        self.lblEfectivodinero = QtWidgets.QLabel(self.frame_2)
        self.lblEfectivodinero.setGeometry(QtCore.QRect(495, 32, 71, 31))
        
        self.lblEfectivodinero.setPalette(palette1)
        font = QtGui.QFont()
        font.setFamily("Open Sans Semibold")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.lblEfectivodinero.setFont(font)
        self.lblEfectivodinero.setStyleSheet("background-color: rgba(255, 255, 255, 0);")
        self.lblEfectivodinero.setObjectName("lblEfectivodinero")

        # -----------  lblChicadinero dinero  -----------
        self.lblChicadinero = QtWidgets.QLabel(self.frame_2)
        self.lblChicadinero.setGeometry(QtCore.QRect(495, 56, 71, 31))
        self.lblChicadinero.setPalette(palette1)
        font = QtGui.QFont()
        font.setFamily("Open Sans Semibold")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.lblChicadinero.setFont(font)
        self.lblChicadinero.setStyleSheet("background-color: rgba(255, 255, 255, 0);")
        self.lblChicadinero.setObjectName("lblChicadinero")

        # -----------  linea vertical blanca  -----------
        self.label = QtWidgets.QLabel(self.frame_2)
        self.label.setGeometry(QtCore.QRect(578, 13, 3, 71))
        self.label.setText("")
        self.label.setPixmap(QtGui.QPixmap("C:/Users/mrojasc/Desktop/ivan/Genesis/PyQT_sistema/UI/imgs/line.png"))
        self.label.setScaledContents(True)
        self.label.setObjectName("label")

        # -----------  lblPrinter  -----------
        self.lblPrinter = QtWidgets.QLabel(self.frame)
        self.lblPrinter.setGeometry(QtCore.QRect(665, 10, 42, 42))
        self.lblPrinter.setText("")
        self.lblPrinter.setPixmap(QtGui.QPixmap("C:/Users/mrojasc/Desktop/ivan/Genesis/PyQT_sistema/UI/imgs/printer.png"))
        self.lblPrinter.setScaledContents(True)
        self.lblPrinter.setObjectName("lblPrinter")
        self.lblPrinter.mousePressEvent = self.print

        # ----------- lbl total dinero-----------
        self.lblTotaldinero = QtWidgets.QLabel(self.frame_2)
        self.lblTotaldinero.setGeometry(QtCore.QRect(605, 30, 111, 41))
        self.lblTotaldinero.setPalette(palette1)
        font = QtGui.QFont()
        font.setFamily("Open Sans Semibold")
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.lblTotaldinero.setFont(font)
        self.lblTotaldinero.setStyleSheet("background-color: rgba(255, 255, 255, 0);")
        self.lblTotaldinero.setObjectName("lblTotaldinero")

        # -----------  lbl total  -----------
        self.lblTotal = QtWidgets.QLabel(self.frame_2)
        self.lblTotal.setGeometry(QtCore.QRect(618, 10, 61, 31))
        self.lblTotal.setPalette(palette)
        font = QtGui.QFont()
        font.setFamily("Open Sans Semibold")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.lblTotal.setFont(font)
        self.lblTotal.setStyleSheet("background-color: rgba(255, 255, 255, 0);")
        self.lblTotal.setObjectName("lblTotal")


        # -----------  lineEdit [Caja Chica]  -----------
        self.lineEdit = QtWidgets.QLineEdit(self.frame_2)
        self.lineEdit.setGeometry(QtCore.QRect(493, 60, 75, 22))
        font = QtGui.QFont()
        font.setFamily("Open Sans Semibold")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.lineEdit.setFont(font)
        self.lineEdit.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.lineEdit.setMaxLength(6)
        self.lineEdit.setObjectName("lineEdit")

        self.retranslateUi()
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(self)
        self.tabWidget.blockSignals(False)

        #self.run_threads()

    def retranslateUi(self):
        _translate = QtCore.QCoreApplication.translate
        self.setWindowTitle(_translate("selsDialog", "VENTAS DIARIAS - [Museo del Libro]"))
        self.titleLabel.setText(_translate("selsDialog", "--- Hoja de Ventas ---"))

        # -----------  font for row headers  -----------
        font = QtGui.QFont()
        font.setFamily("Open Sans Semibold")
        font.setPointSize(11)
        font.setWeight(85)
        font.setBold(True)

        # -----------  columns of first tab  -----------
        item = self.tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("selsDialog", "Hora"))
        item.setFont(font)
        item.setForeground(QBrush(QColor(0,0,0)))
        item = self.tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("selsDialog", "User"))
        item.setFont(font)
        item.setForeground(QBrush(QColor(0,0,0)))
        item = self.tableWidget.horizontalHeaderItem(2)
        item.setText(_translate("selsDialog", "cod"))
        item.setFont(font)
        item.setForeground(QBrush(QColor(0,0,0)))
        item = self.tableWidget.horizontalHeaderItem(3)
        item.setText(_translate("selsDialog", "titulo"))
        item.setFont(font)
        item.setForeground(QBrush(QColor(0,0,0)))
        item = self.tableWidget.horizontalHeaderItem(4)
        item.setText(_translate("selsDialog", "cant"))
        item.setFont(font)
        item.setForeground(QBrush(QColor(0,0,0)))
        item = self.tableWidget.horizontalHeaderItem(5)
        item.setText(_translate("selsDialog", "p.u"))
        item.setFont(font)
        item.setForeground(QBrush(QColor(0,0,0)))
        item = self.tableWidget.horizontalHeaderItem(6)
        item.setText(_translate("selsDialog", "p.v"))
        item.setFont(font)
        item.setForeground(QBrush(QColor(0,0,0)))

        # -----------  columns of second tab  -----------
        item = self.tableWidget_2.horizontalHeaderItem(0)
        item.setText(_translate("selsDialog", "Hora"))
        item.setFont(font)
        item.setForeground(QBrush(QColor(0,0,0)))
        item = self.tableWidget_2.horizontalHeaderItem(1)
        item.setText(_translate("selsDialog", "User"))
        item.setFont(font)
        item.setForeground(QBrush(QColor(0,0,0)))
        item = self.tableWidget_2.horizontalHeaderItem(2)
        item.setText(_translate("selsDialog", "cod"))
        item.setFont(font)
        item.setForeground(QBrush(QColor(0,0,0)))
        item = self.tableWidget_2.horizontalHeaderItem(3)
        item.setText(_translate("selsDialog", "titulo"))
        item.setFont(font)
        item.setForeground(QBrush(QColor(0,0,0)))
        item = self.tableWidget_2.horizontalHeaderItem(4)
        item.setText(_translate("selsDialog", "cant"))
        item.setFont(font)
        item.setForeground(QBrush(QColor(0,0,0)))
        item = self.tableWidget_2.horizontalHeaderItem(5)
        item.setText(_translate("selsDialog", "p.u"))
        item.setFont(font)
        item.setForeground(QBrush(QColor(0,0,0)))
        item = self.tableWidget_2.horizontalHeaderItem(6)
        item.setText(_translate("selsDialog", "p.v"))
        item.setFont(font)
        item.setForeground(QBrush(QColor(0,0,0)))

        # -----------  columns of third tab  -----------
        item = self.tableWidget_3.horizontalHeaderItem(0)
        item.setText(_translate("selsDialog", "Hora"))
        item.setFont(font)
        item.setForeground(QBrush(QColor(0,0,0)))
        item = self.tableWidget_3.horizontalHeaderItem(1)
        item.setText(_translate("selsDialog", "User"))
        item.setFont(font)
        item.setForeground(QBrush(QColor(0,0,0)))
        item = self.tableWidget_3.horizontalHeaderItem(2)
        item.setText(_translate("selsDialog", "cod"))
        item.setFont(font)
        item.setForeground(QBrush(QColor(0,0,0)))
        item = self.tableWidget_3.horizontalHeaderItem(3)
        item.setText(_translate("selsDialog", "titulo"))
        item.setFont(font)
        item.setForeground(QBrush(QColor(0,0,0)))
        item = self.tableWidget_3.horizontalHeaderItem(4)
        item.setText(_translate("selsDialog", "cant"))
        item.setFont(font)
        item.setForeground(QBrush(QColor(0,0,0)))
        item = self.tableWidget_3.horizontalHeaderItem(5)
        item.setText(_translate("selsDialog", "p.u"))
        item.setFont(font)
        item.setForeground(QBrush(QColor(0,0,0)))
        item = self.tableWidget_3.horizontalHeaderItem(6)
        item.setText(_translate("selsDialog", "p.v"))
        item.setFont(font)
        item.setForeground(QBrush(QColor(0,0,0)))   
        
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("selsDialog", "Error"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_3), _translate("selsDialog", "Error"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("selsDialog", "Error"))

        self.lblVisa.setText(_translate("selsDialog", "Visa:"))
        self.lblEfectivo.setText(_translate("selsDialog", "Efectivo:"))
        self.lblVisadinero.setText(_translate("selsDialog", "0.0"))
        self.lblChica.setText(_translate("selsDialog", "Gasto diario:"))
        self.lblEfectivodinero.setText(_translate("selsDialog", "0.0"))
        self.lblChicadinero.setText(_translate("selsDialog", "0.0"))
        self.lblTotaldinero.setText(_translate("selsDialog", "0.0"))
        self.lblTotal.setText(_translate("selsDialog", "Total:"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    selsDialog = QtWidgets.QDialog()
    ui = Ui_selsDialog(selsDialog)
    #ui.setupUi(selsDialog)
    ui.show()
    sys.exit(app.exec_())
